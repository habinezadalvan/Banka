{
    "swagger": "2.0",
    "info": {
      "version": "2",
      "title": "Banka API Endpoints Documentation"
    },
    "description": "BAKA Appi Documentation",
    "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "jwtsecurity": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
  },
    "schemes": [
      "http",
      "https"
    ],
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
     ],
    "definitions": {
        "signup": {
            "type": "object",
            "properties" : {
                
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "confirmpassword": {
                    "type": "string"
                }

            }
        },
        "AdminCreateStaff": {
            "type": "object",
            "properties" : {
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "confirmpassword": {
                    "type": "string"
                },
                "isadmin": {
                    "type": "string"
                }

            }
        },
        "signin": {
            "type": "object",
            "properties" : {
                
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }

            }
        },
        "account": {
            "type": "object",
            "properties" : {
                
                "type": {
                    "type": "string" 
                }

            }
        },
        "account_status": {
            "type": "object",
            "properties" : {
                
                "status": {
                    "type": "string"
                }

            }
        },
        "transaction": {
            "type": "object",
            "properties" : {
                
                "amount": {
                    "type": "number"
                }

            }
        }
    }, 
    "paths": {
        "/api/v2/auth/signup": {
          "post": {
            "tags": [
              "users"
            ],
            "description": "Sign up is the first step to access banka services",
            "parameters": [
              {
                "name": "user",
                "in": "body",
                "description": "For the new user should sign up",
                "schema": {
                  "$ref": "#/definitions/signup"
                }
              }
            ],
            "produces": [
              "application/json"
            ],
            "responses": {
              "201": {
                "description": "success: when a post request is done successfully"
              },
              "403": {
                "description": "Forbidden Error: this is when someone is not allowed to perform such operation or entered wrong credentials"
              },
              "401": {
                "description": "Unauthorized Error: this is when someone tries to create account when he/she is not authorized"
              },
              "409": {
                "description": "Conflict Error"
              },
              "400": {
                "description": "Syntax Error: when password and comfirmpassword do not match"
              },
              "500": {
                "description": "Server Error"
              }

            }
       
        }
    },
    "/api/v2/auth/signin": {
        "post": {
          "tags": [
            "users"
          ],
          "description": "User Log in",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "The login is for the person who already has an account to banka",
              "schema": {
                "$ref": "#/definitions/signin"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Successfully request"
            },
            "403": {
              "description": "Forbidden Error: this is when someone is not allowed to perform such operation or entered wrong credentials"
            },
            "401": {
              "description": "Unauthorized Error: this is when someone tries to create account when he/she is not authorized"
            },
            "500": {
              "description": "Server Error"
            }
          }
     
      }
    },
    "/api/v2/auth/createStaff": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "Sign up is the first step to access banka services",
        "parameters": [
          {
            "name":"Authorization",
            "in": "header",
            "description" :"The admin token",
            "required":true
          
          },
          {
            "name": "admin",
            "in": "body",
            "description": "For the new user should sign up",
            "schema": {
              "$ref": "#/definitions/AdminCreateStaff"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "success: when a post request is done successfully"
          },
          "403": {
            "description": "Forbidden Error: this is when someone is not allowed to perform such operation or entered wrong credentials"
          },
          "401": {
            "description": "Unauthorized Error: this is when someone tries to create account when he/she is not authorized"
          },
          "409": {
            "description": "Conflict Error"
          },
          "400": {
            "description": "Syntax Error: when password and comfirmpassword do not match"
          },
          "500": {
            "description": "Server Error"
          }
        }
   
    }
},

"/api/v2/accounts": {
  "post": {
    "tags": [
      "Accounts"
    ],
    "description": "Create Bank account",
    "parameters": [
      {
          "name":"Authorization",
          "in": "header",
          "description" :"Token",
          "required":true
          
        
      },
      {
          "name":"account type",
          "in": "body",
          "description" :"Valid Bank Account type is current or savings",
          "schema": {
              "$ref": "#/definitions/account"
        }
      }
    ],
    "produces": [
      "application/json"
    ],
    "responses": {
      "201": {
        "description": "success: when a post request is done successfully"
      },
      "403": {
        "description": "Error: this is when someone is not allowed to perform such operation or entered wrong credentials"
      },
      "401": {
        "description": "Error: this is when someone tries to create account when he/she is not authorized"
      },
      "500": {
        "description": "Server Error"
      }
    }

},
"get": {
  "tags": [
    "Accounts"
  ],
  "description": "View all Bank accounts",
  "parameters": [
    {
        "name":"Authorization",
        "in": "header",
        "description" :"Token",
        "required":true
      
    } 
  ],
  "produces": [
    "application/json"
  ],
  "responses": {
    "200": {
        "description": "{success}The list of all Bank accounts"
      
    },
    "404": {
        "description": "Not found Error: There is no Bank accounts"
      
    },
    "403": {
      "description": "Forbidden Error: This is when someone tries to get all when he/she is not the right person"
  },
  "500": {
    "description": "Server Error"
  }

  }

}

},
"/api/v2/accounts/{accountNumber}/transactions": {
  "get": {
    "tags": [
      "Transactions"
    ],
    "description": "View account transactions history",
    "parameters": [
      {
          "name":"accountNumber",
          "in": "path",
          "description" :"Transactions",
          "required":true,
          "type":"integer"
        
      },
     
      {
          "name":"Authorization",
          "in": "header",
          "description" :"Token",
          "required":true
        
      } 
    ],
    "produces": [
      "application/json"
    ],
    "responses": {
      "200": {
        "description": "successful request"
      
    },
    "404": {
        "description": "Not found Error: There is no Bank accounts"
      
    },
    "403": {
      "description": "Forbidden Error: This is when someone tries to get all when he/she is not the right person"
  },
  "500": {
    "description": "Server Error"
  }
    }

}
},
"/api/accounts?status=active": {
  "get": {
    "tags": [
      "Accounts"
    ],
    "description": "View all active Bank accounts",
    "parameters": [
      {
          "name":"status",
          "in": "query",
          "description" :"bank status",
          "required":true
        
      },
      {
          "name":"Authorization",
          "in": "header",
          "description" :"Token",
          "required":true
        
      } 
    ],
    "produces": [
      "application/json"
    ],
    "responses": {
      "200": {
        "description": "Successful request"
      },
      "403": {
          "description": "Forbidden erron: when someone tries to view account details while he/she is not allowed"
      },
      "404": {
          "description": "There are no account"
      },
      "500": {
        "description": "Server Error"
      }
    }

}
},
"/api/v2/accounts/{accountNumber}": {
  "get": {
    "tags": [
      "Accounts"
    ],
    "description": "View a specific account’s details",
    "parameters": [
      {
          "name":"accountNumber",
          "in": "path",
          "description" :"View a specific account’s details",
          "required":true 
      },
     
      {
          "name":"Authorization",
          "in": "header",
          "description" :"Token",
          "required":true
        
      } 
    ],
    "produces": [
      "application/json"
    ],
    "responses": {
      "200": {
        "description": "Successful request"
      },
      "403": {
          "description": "Forbidden erron: when someone tries to view account details while he/she is not allowed"
      },
      "404": {
          "description": "There are no account"
      },
      "500": {
        "description": "Server Error"
      }
    }

}
},
"/api/v2/{user-email-address}/accounts": {
  "get": {
    "tags": [
      "Accounts"
    ],
    "description": "View all accounts owned by a specific user",
    "parameters": [
      {
          "name":"user-email-address",
          "in": "path",
          "description" :"The email address of the client",
          "required":true 
      },
     
      {
          "name":"Authorization",
          "in": "header",
          "description" :"The admin token",
          "required":true
        
      } 
    ],
    "produces": [
      "application/json"
    ],
    "responses": {
      "200": {
        "description": "Successful request"
      },
      "403": {
          "description": "Forbidden erron: when someone tries to view account details while he/she is not allowed"
      },
      "404": {
          "description": "There are no account"
      },
      "500": {
        "description": "Server Error"
      }

    }

}
},

"/api/v2/account/{accountNumber}": {
  "patch": {
    "tags": [
      "Accounts"
    ],
    "description": "Activate or deactivate a Bank account",
    "parameters": [
      {
          "name":"accountNumber",
          "in": "path",
          "description" :"account Number",
          "required":true
          
        
      },
      {
          "name":"Authorization",
          "in": "header",
          "description" :"Token",
          "required":true
          
        
      },
      
      {
          "name":"account status",
          "in": "body",
          "description" :"Bank Account status should be active or dormant",
          "schema": {
              "$ref": "#/definitions/account_status"
        }
      }
    ],
    "produces": [
      "application/json"
    ],
    "responses": {
      "200": {
        "description": "Successful request"
        
      },
      "403": {
        "description": "Forbidden Error: this is when someone is not allowed to perform such operation or entered wrong credentials"
      },
      "401": {
        "description": "Unauthorized Error: this is when someone tries to create account when he/she is not authorized"
      },
      "409": {
        "description": "Conflict Error"
      },
      "400": {
        "description": "Syntax Error: when account number is not integer"
      },
      "500": {
        "description": "Server Error"
      }
    }
}
},
"/api/v2/account/{accountnumber}": {
  "delete": {
    "tags": [
      "Accounts"
    ],
    "description": "Delete bank account account by staff",
    "parameters": [
      {
          "name":"accountnumber",
          "in": "path",
          "description" :"The account number to delete",
          "required":true
        
      },
     
      {
          "name":"Authorization",
          "in": "header",
          "description" :"Token",
          "required":true
        
      }  
    ],
    "produces": [
      "application/json"
    ],
    "responses": {
      "200": {
        "description": "Bank account has been deleted successfully"
        
      },
      "404": {
          "description": "The account you are trying to delete does not exists"
          
        },
        "403": {
          "description": "Forbidden Error: this is when someone is not allowed to perform such operation or entered wrong credentials"
        },
        "401": {
          "description": "Unauthorized Error: this is when someone tries to create account when he/she is not authorized"
        },
        "400": {
          "description": "Syntax Error: when account number is not integer"
        },
        "500": {
          "description": "Server Error"
        }
    }

}
},
"/api/v2/transactions/{accountNumber}/credit": {
        "post": {
          "tags": [
            "Transactions"
          ],
          "description": "Credit a Bank Acoount",
          "parameters": [
            {
                "name":"accountNumber",
                "in": "path",
                "description" :"The account number to credit",
                "required":true
              
            },
           
            {
                "name":"Authorization",
                "in": "header",
                "description" :"The cashier token",
                "required":true
              
            },
            {
                "name":"Amount",
                "in": "body",
                "description" :"The amount of money to credit",
                "schema": {
                    "$ref": "#/definitions/transaction"
              }
            }  
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Transaction sucessful"
              
              
            },
            "404": {
              "description": "No found error: The account you are  does not exists"
              
            },
            "403": {
              "description": "Forbidden Error: this is when someone is not allowed to perform such operation or entered wrong credentials"
            },
            "401": {
              "description": "Unauthorized Error: this is when someone tries to create account when he/she is not authorized"
            },
            "500": {
              "description": "Server Error"
            }
          }
     
      }
    },
    "/api/v2/transactions/{accountNumber}/debit": {
        "post": {
          "tags": [
            "Transactions"
          ],
          "description": "Debit a Bank Acoount",
          "parameters": [
            {
                "name":"accountNumber",
                "in": "path",
                "description" :"The account number to debit",
                "required":true
              
            },
           
            {
                "name":"Authorization",
                "in": "header",
                "description" :"The cashier token",
                "required":true
              
            },
            {
                "name":"Amount",
                "in": "body",
                "description" :"The amount of money to debit",
                "schema": {
                    "$ref": "#/definitions/transaction"
              }
            }  
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "201": {
              "description": "Transaction sucessful"
              
              
            },
            "404": {
              "description": "No found error: The account you are  does not exists"
              
            },
            "403": {
              "description": "Forbidden Error: this is when someone is not allowed to perform such operation or entered wrong credentials, or you have insufficient amount"
            },
            "401": {
              "description": "Unauthorized Error: this is when someone tries to create account when he/she is not authorized"
            },
            "500": {
              "description": "Server Error"
            }
          }
     
      }
    },

    "/api/v2/transactions/{transactionId}": {
        "get": {
          "tags": [
            "Transactions"
          ],
          "description": "View a specific transaction",
          "parameters": [
            {
                "name":"transactionId",
                "in": "path",
                "description" :"The transaction id to view",
                "required":true 
            },
           
            {
                "name":"Authorization",
                "in": "header",
                "description" :"The client token",
                "required":true
              
            } 
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "successful request"
            
          },
          "404": {
              "description": "Not found Error: There is no transaction"
            
          },
          "403": {
            "description": "Forbidden Error: This is when someone tries to get all when he/she is not the right person"
        },
        "500": {
          "description": "Server Error"
        }
          }
     
      }
    }
}

}